#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

timezone="$(cat /etc/timezone)"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# DATA BASE CREATION
# as we want to choose the database engine, we cannot rely on manifest to do this
#=================================================
ynh_script_progression --message="cr√©ating data base for $app..." --weight=1
    db_name=$(ynh_sanitize_dbid --db_name=$app)
    db_user=$db_name
    db_pwd=$(ynh_string_random --length=30)
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd

    if [ $db_type == "mysql" ]; then
        ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    elif [ $db_type == "postgresql" ]; then
        ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    fi

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

# Create a dedicated NGINX config
ynh_add_nginx_config

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Setuping application with CURL..."

    if [ $db_type == "mysql" ]; then
        db_port="3306"
    elif [ $db_type == "postgresql" ]; then
        db_port="5432"
    fi


# Installation with curl
ynh_script_progression --message="Finalizing installation..."
ynh_local_curl "/installer.php" "install_permsok=1"
ynh_local_curl "/installer.php"  "install_type=i"
ynh_local_curl "/installer.php"  "install_dbtype=$db_type" "install_dbhost=localhost" "install_dbport=$db_port" "install_dbuser=$db_user" "install_dbpass=$db_pwd" "install_dbname=$db_name" "install_dbprefix=$tb_prefix"
ynh_local_curl "/installer.php"  "install_dbperms_ok=1"
ynh_local_curl "/installer.php"  "install_dbwrite_ok=1"
password=`jq -Rj @uri <<<$password` #to escape special characters that may appear in a password
ynh_local_curl "/installer.php"  "install_adminlogin=$admin" "install_adminpass=$password" "install_adminpass_verif=$password"
ynh_local_curl "/installer.php"  "install_telemetry_ok=1"
ynh_local_curl "/installer.php"  "install_prefs_ok=1"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chown $app  $install_dir/galette/config
chmod g+rwx $install_dir/galette/config

for folder in attachments cache exports files imports logs photos templates_c tempimages
do
   chown $app  $install_dir/galette/data/$folder
   chmod g+rwx $install_dir/galette/data/$folder
done

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
